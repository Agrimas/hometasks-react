{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Error404","classes","makeStyles","fullscreen","background","height","flexGrow","display","justifyContent","alignItems","flexDirection","useStyles","Grid","container","className","Typography","variant","Message","props","Classes","src","avatar","alt","name","message","message__body","message__author","message__text","message__time","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressEnterHandler","inputClass","s","someClass","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","includes","alert","length","e","currentTarget","event","charCode","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checked","isChecked","setChecked","checkbox","HW4","text","setText","showAlert","column","testSpanError","blue","blueBack","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","JuniorPlus","SuperSelect","options","onChangeOption","mappedOptions","option","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","action","sort","userA","userB","result","localeCompare","payload","user","age","initialPeople","HW8","people","setPeople","finalPeople","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","SET_LOADING","initState","loading","loadingAC","HW10","useSelector","dispatch","useDispatch","setTimeout","console","log","Junior","PATH","PRE_JUNIOR","JUNIOR","Routes","minHeight","maxHeight","path","exact","render","to","Header","React","open","setOpen","listItems","Object","entries","route","ListItem","button","ListItemText","primary","Button","Drawer","anchor","onClose","style","width","role","List","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a723757d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__2kPL0\",\"avatar\":\"Message_avatar__g1dcu\",\"message\":\"Message_message__EBBng\",\"message__body\":\"Message_message__body__1aS_H\",\"message__author\":\"Message_message__author__2DGEl\",\"message__text\":\"Message_message__text__2T0Mw\",\"message__time\":\"Message_message__time__3FfXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1Hg_6\",\"blueBack\":\"HW4_blueBack__2wnHL\",\"column\":\"HW4_column__3XtIk\",\"testSpanError\":\"HW4_testSpanError__1s1ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2qAEA\",\"errorInput\":\"SuperInputText_errorInput__1_Vw5\",\"error\":\"SuperInputText_error__2VZmK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__zXTm6\",\"error\":\"Greeting_error__1Ubf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3_s6z\",\"red\":\"SuperButton_red__1xBMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Tl7dq\",\"spanClassName\":\"SuperCheckbox_spanClassName__Xz2z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Vr0CR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__fV5HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__2Yb-0\"};","import React from 'react'\r\nimport {Grid, makeStyles, Typography} from '@material-ui/core';\r\n\r\nfunction Error404() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        fullscreen: {\r\n            background: 'orange',\r\n            height: '100%',\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Grid container className={classes.fullscreen}>\r\n            <Typography variant=\"h1\">404</Typography>\r\n            <Typography variant=\"h5\">Page not found!</Typography>\r\n            <Typography variant=\"h5\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Typography>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react'\r\nimport Classes from './Message.module.css';\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={Classes.container}>\r\n            <img src={props.avatar} alt={`Avatar of ${props.name}`} className={Classes.avatar}/>\r\n            <div className={Classes.message}>\r\n                <div className={Classes.message__body}>\r\n                    <span className={Classes.message__author}>{props.name}</span>\r\n                    <p className={Classes.message__text}>{props.message}</p>\r\n                </div>\r\n                <time className={Classes.message__time}>{props.time}</time>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport Classes from './Affairs.module.css'\r\nimport {AffairType} from './HW2';\r\nimport {deleteAffairCallbackType} from './Affairs';\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: deleteAffairCallbackType\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id);\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.affair}>\r\n            <div>\r\n                {props.affair.name}\r\n            </div>\r\n            <div>\r\n                {props.affair.priority}\r\n            </div>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: deleteAffairCallbackType\r\n}\r\n\r\nexport type deleteAffairCallbackType = (_id: number) => void;\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = 'all' | 'low' | 'middle' | 'high'\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') {\r\n        return affairs;\r\n    }\r\n    return affairs.filter((affair) => affair.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    affairs = affairs.filter((affair) => affair._id !== _id);\r\n    return affairs;\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressEnterHandler: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressEnterHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.someClass// need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={onKeyPressEnterHandler}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (!name || name.includes(' ')) {\r\n            setError('Неккоректное имя')\r\n            return\r\n        }\r\n        setError('');\r\n        addUserCallback(name);\r\n        alert(`Hello  ${name}!`) // need to fix\r\n    }\r\n\r\n    const onKeyPressEnterHandler = function (event: KeyboardEvent<HTMLInputElement>) {\r\n        if (event.charCode === 13) {\r\n            addUser();\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressEnterHandler={onKeyPressEnterHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([{_id: v1(), name: name}, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            homeworks 3\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error? s.errorInput : s.superInput + ' ' + className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [isChecked, setChecked] = useState(restProps.checked ?? false)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e);\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n                checked={isChecked}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки, показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue + ' ' + s.blueBack} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport classes from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n         setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${classes.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n\r\n\r\n    const [value, setValue] = useState<string>(restoreState('editable-span-value', ''))\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>JuniorPlus</div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport {v1} from 'uuid';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange,\r\n        onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options?.map(option => <option key={v1()}>{option}</option>) ?? []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        name,\r\n        options,\r\n        value,\r\n        onChange,\r\n        onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption && onChangeOption(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => ( // map options with key\r\n            <label key={name + '-' + i}>\r\n                <input\r\n                    type={'radio'}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChangeCallback}\r\n                    {...restProps}\r\n                />\r\n                {o}\r\n            </label>\r\n        )) :\r\n        []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from '../HW8';\r\n\r\ntype ActionType = {\r\n    type: 'sort' | 'check'\r\n    payload: 'up' | 'down' | number\r\n}\r\n\r\nexport const homeWorkReducer = (state: UserType[], action: ActionType): UserType[] => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            const sortedState = [...state];\r\n            return sortedState.sort((userA, userB) => {\r\n                const result = userA.name.localeCompare(userB.name, 'ru');\r\n                return action.payload === 'up' ? result : result * -1;\r\n            })\r\n        }\r\n        case 'check': {\r\n            return state.filter(user => user.age > action.payload);\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nexport type UserType = {\r\n    _id: number,\r\n    name: string,\r\n    age: number\r\n}\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((user: UserType) => (\r\n        <div key={user._id}>\r\n            {user.name}, {user.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={check18}>check 18</SuperButton></div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = date.toLocaleTimeString() // fix with date\r\n    const stringDate = date.toLocaleDateString() // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","const SET_LOADING = 'loadingReducer/SET_LOADING';\r\n\r\ntype ActionType = loadingActionType;\r\n\r\nconst initState = {\r\n    loading: false\r\n};\r\ntype initStateType = typeof initState;\r\n\r\nexport const loadingReducer = (state = initState, action: ActionType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype loadingActionType = {\r\n    type: typeof SET_LOADING\r\n    loading: boolean\r\n}\r\nexport const loadingAC = (loading: boolean): loadingActionType => ({type: SET_LOADING, loading}); // fix any","import React from 'react';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from './bll/store';\r\nimport {loadingAC} from './bll/loadingReducer';\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const loading = useSelector((state: RootState) => state.loading.loading);\r\n    const dispatch = useDispatch();\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true));\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false));\r\n            console.log('loading...');\r\n        }, 2000)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>крутилка...</div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React from 'react';\r\nimport HW7 from '../../h7/HW7';\r\nimport HW8 from '../../h8/HW8';\r\nimport HW9 from '../../h9/HW9';\r\nimport HW10 from '../../h10/HW10';\r\n\r\nfunction Junior() {\r\n    return (<>\r\n            <div>Junior</div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Junior;","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport PreJunior from './pages/PreJunior'\r\nimport JuniorPlus from './pages/Junior+';\r\nimport Junior from './pages/Junior';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    \"JUNIOR+\": '/junior+',\r\n}\r\n\r\nfunction Routes() {\r\n    const useStyles = makeStyles(() => ({\r\n        fullscreen: {\r\n            minHeight: 'auto',\r\n            maxHeight: '100%',\r\n            flexGrow: 1,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.fullscreen}>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH['JUNIOR+']} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from './Routes';\r\n\r\n\r\nfunction Header() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const listItems = Object.entries(PATH).map((route) => <NavLink to={route[1]}>\r\n            <ListItem button>\r\n                <ListItemText primary={route[0]}/>\r\n            </ListItem>\r\n        </NavLink>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => setOpen(true)}>Nav</Button>\r\n            <Drawer anchor={'right'} open={open} onClose={() => setOpen(false)}>\r\n                <div style={{width: 250}} role=\"presentation\" onClick={() => setOpen(false)}>\r\n                    <List>\r\n                        {listItems}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {loadingReducer} from './loadingReducer';\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport store from './p2-homeworks/h10/bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}